/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type OauthProviderEnum = "github" | "google";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AtlasSchemaRevisionsAtlasSchemaRevisions {
  applied: Generated<Int8>;
  description: string;
  error: string | null;
  error_stmt: string | null;
  executed_at: Timestamp;
  execution_time: Int8;
  hash: string;
  operator_version: string;
  partial_hashes: Json | null;
  total: Generated<Int8>;
  type: Generated<Int8>;
  version: string;
}

export interface Users {
  avatar_url: string | null;
  created_at: Generated<Timestamp | null>;
  email: string;
  id: Generated<string>;
  name: string | null;
  provider: OauthProviderEnum;
  provider_id: string;
  updated_at: Generated<Timestamp | null>;
}

export interface DB {
  "atlas_schema_revisions.atlas_schema_revisions": AtlasSchemaRevisionsAtlasSchemaRevisions;
  users: Users;
}
